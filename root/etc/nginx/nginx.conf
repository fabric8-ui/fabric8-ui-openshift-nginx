# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/

worker_processes 1;
error_log /dev/stdout info;
pid /run/nginx.pid;
daemon off;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format logstash_json '{ "@timestamp": "$time_iso8601", '
                         '"@fields": { '
                         '"remote_addr": "$remote_addr", '
                         '"remote_user": "$remote_user", '
                         '"body_bytes_sent": "$body_bytes_sent", '
                         '"request_time": "$request_time", '
                         '"status": "$status", '
                         '"request": "$request", '
                         '"request_method": "$request_method", '
                         '"http_referrer": "$http_referer", '
                         '"http_x_forwarded_for": "$http_x_forwarded_for", '
                         '"http_user_agent": "$http_user_agent" } }';

    access_log /dev/stdout logstash_json;

    client_body_temp_path /tmp;
    fastcgi_temp_path /tmp;
    scgi_temp_path /tmp;
    proxy_temp_path /tmp;
    uwsgi_temp_path /tmp;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;


    proxy_cache_path  /etc/nginx/openshiftio_cache levels=1:2 keys_zone=openshiftio_cache:10m max_size=10g inactive=60m use_temp_path=off;

    server {
        listen       8080 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        # Added to test the cache
        add_header X-Cache-Status $upstream_cache_status;

        location / {
          etag off;

          proxy_cache openshiftio_cache;
          proxy_cache_use_stale error updating timeout http_500 http_502 http_503 http_504;
          proxy_cache_revalidate on;
          proxy_cache_min_uses 3;
          proxy_cache_lock on;

          if_modified_since exact;
          more_clear_headers 'Last-Modified';
        }

        location /_assets/ {
          etag on;
          gzip on;

          if_modified_since exact;

          proxy_cache openshiftio_cache;
          proxy_cache_use_stale error updating timeout http_500 http_502 http_503 http_504;
          proxy_cache_revalidate on;
          proxy_cache_min_uses 3;
          proxy_cache_lock on;

          more_clear_headers 'Last-Modified';
          # expires 1y;
        }

        # CORS proxy to OSO
        # Avoid Nginx caching DNS lookup for ever, causing problems when
        # combined with changing DNS, e.g. Amazon ELB
        # https://tenzer.dk/nginx-with-dynamic-upstreams/
        resolver 8.8.8.8;
        set $oso ${PROXY_PASS_URL};
        location ~ /_p/oso/(?<path>.*) {
          proxy_redirect off;
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          # Nginx doesn't support nested If statements, so we
          # concatenate compound conditions on the $cors variable
          # and process later

          # If request comes from allowed subdomain
          # (*.mckinsey.com) then we enable CORS

          set $cors "0";
          #if ($http_origin ~* (https?://.*\.openshift.io(:[0-9]+)?$)) {
            set $cors "1";
          #}

          # OPTIONS indicates a CORS pre-flight request
          if ($request_method = 'OPTIONS') {
            set $cors "${cors}o";
          }

          # Append CORS headers to any request from
          # allowed CORS domain, except OPTIONS
          if ($cors = "1") {
            more_set_headers 'Access-Control-Allow-Origin: *';
            more_set_headers 'Access-Control-Allow-Credentials: true';
            proxy_pass      $oso/$path;
          }

          # OPTIONS (pre-flight) request from allowed
          # CORS domain. return response directly
          if ($cors = "1o") {
            more_set_headers 'Access-Control-Allow-Origin: $http_origin';
            more_set_headers 'Access-Control-Allow-Methods: GET, POST, OPTIONS, PUT, DELETE';
            more_set_headers 'Access-Control-Allow-Credentials: true';
            more_set_headers 'Access-Control-Allow-Headers: Origin,Content-Type,Accept';
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
          }

          proxy_pass      $oso;
        }

        # This is added to support pushState URL patterm
        # Redirecting every 404 to angular APP and
        # let the APP handle
        error_page 404 =200 /index.html;

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

        gzip            on;
        gzip_min_length 1000;
        gzip_comp_level 9;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types      text/plain text/css application/javascript application/xml;
    }

# Settings for a TLS enabled server.
# - we dont do TLS here, offload that to the openshift edge instead

}
